package cn.nwsuaf.dao;

import java.util.HashMap;
import java.util.List;

public class CourseDao extends BaseDao {
	/**
	 *  课程信息列表
	 * @param where 筛选条件
	 * @param pg  待显示的页面
	 * @param pgSize  每页显示的记录条数
	 * @return 包含记录条数（num），及记录列表（recs）的map
	 * @throws Exception
	 */
	public HashMap<String,Object> getCourseList(String where,int pg,int pgSize) throws Exception{
		 HashMap<String,Object> param = new HashMap<String,Object>();
		 param.put("where", where);
		 param.put("offset",(pg - 1)*pgSize);
		 param.put("pgSize", pgSize);
		 List<?> res = getList("course.courselist", param);
		 String num = getOne("course.courseNum", param).toString();
		 param.clear();
		 param.put("recs", res);
		 param.put("num", num);
		 return param;
	 }
	
	/**
	 * 指定课程信息
	 * @param courseID
	 * @return map 课程详细信息
	 * @throws Exception
	 */
	public Object getCourseById(String courseID) throws Exception{
		return getOne("course.courseByid", courseID);
	}
	
	/**
	 * 保存修改或添加
	 * @param courseInfo 课程信息
	 * @throws Exception
	 */
	public void save(HashMap<String, String> courseInfo) throws Exception{
		String oldID =courseInfo.get("oldcourseID");
		if( oldID == null || "".equals(oldID)){
			insert("course.courseInsert", courseInfo);
		}
		else{
			update("course.courseUpdate", courseInfo);
		}
	}
	

	/**
	 * 按学号删除学生
	 * @param courseId 课程号
	 * @throws Exception
	 */
	public void delOneCourse(String courseID) throws Exception{
		delete("course.deleteBycourseID", courseID);
	}
	
	public boolean courseIDIsExist(String courseID) throws Exception{
		return Integer.parseInt(getOne("course.courseIDIsExist", courseID).toString())>0;
	}
}